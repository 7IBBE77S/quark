{{ template "base" .}}

{{ define "content" }}

<main class="container">
  <section class="p-5 mb-4 bg-dark rounded-3">
    <h1 class=""></h1>
    <style>
      /* animate the below svg using pure vanilla css styling*/

      .path {
        opacity: 0;
        animation: 5.5s opacity linear infinite;
      }
      @keyframes opacity {
        15% {
          opacity: 0;
        }
        35% {
          opacity: 1;
        }
        65% {
          opacity: 1;
        }
        85% {
          opacity: 0;
        }
      }
      #hg2 {
        animation-delay: 0.5s;
      }
      #hg3 {
        animation-delay: 1s;
      }
      #hg4 {
        animation-delay: 1.5s;
      }
      #hg5 {
        animation-delay: 4s;
      }
      .loading:hover .test {
        fill: #00acd7;
        -moz-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        -webkit-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
      }

      .spinning {
        -webkit-animation-name: spin;
        -webkit-animation-duration: 2000ms;
        -webkit-animation-iteration-count: infinite;
        -webkit-animation-timing-function: linear;
        -moz-animation-name: spin;
        -moz-animation-duration: 2000ms;
        -moz-animation-iteration-count: infinite;
        -moz-animation-timing-function: linear;
        -ms-animation-name: spin;
        -ms-animation-duration: 2000ms;
        -ms-animation-iteration-count: infinite;
        -ms-animation-timing-function: linear;
        animation-name: spin;
        animation-duration: 2000ms;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }

      @-ms-keyframes spin {
        from {
          -ms-transform: rotate(0deg);
        }
        to {
          -ms-transform: rotate(360deg);
        }
      }

      @-moz-keyframes spin {
        from {
          -moz-transform: rotate(0deg);
        }
        to {
          -moz-transform: rotate(360deg);
        }
      }

      @-webkit-keyframes spin {
        from {
          -webkit-transform: rotate(0deg);
        }
        to {
          -webkit-transform: rotate(360deg);
        }
      }

      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }
    </style>
    <div id="" class="">
      <div id="" class="loading spinning">
        <svg
          id=""
          xmlns="http://www.w3.org/2000/svg"
          version="1.0"
          width="90"
          height="83"
          class=""
          viewBox="0 0 1600.000000 1600.000000"
          role="img"
        >
          <title>Quark</title>

          <g
            transform="translate(0.000000,1600.000000) scale(0.100000,-0.100000)"
            fill="#FFFFFF"
            stroke="none"
            stroke-width="1"
            fill-rule="evenodd"
          >
            <path
              id="hg1"
              class="path"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M7640 13989 c-1765 -110 -3375 -978 -4440 -2394 -1217 -1619 -1532 -3748 -835 -5655 222 -609 590 -1252 988 -1729 l70 -83 -639 -639 -639 -639 353 -352 352 -353 5502 5503 5503 5502 -353 352 -352 353 -639 -639 -639 -639 -83 70 c-609 509 -1406 922 -2193 1137 -634 174 -1316 245 -1956 205z m675 -999 c1055 -71 2005 -441 2825 -1099 l25 -20 -3515 -3516 c-1933 -1933 -3518 -3514 -3522 -3513 -15 6 -181 227 -273 363 -145 216 -217 340 -340 590 -275 558 -419 1059 -492 1715 -21 194 -24 742 -5 930 110 1069 490 1979 1163 2785 117 139 389 415 533 540 858 743 1883 1160 3021 1228 124 8 443 6 580 -3z"
            />
            <path
              id="hg5"
              class="path test"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M12798 10672 l-366 -367 59 -120 c267 -544 426 -1112 491 -1750 19 -192 16 -729 -5 -925 -114 -1036 -488 -1924 -1147 -2720 -133 -161 -459 -487 -620 -620 -796 -659 -1682 -1032 -2720 -1147 -219 -24 -754 -24 -970 0 -632 71 -1127 210 -1676 472 l-152 72 -366 -366 -367 -367 128 -71 c1189 -660 2518 -898 3855 -688 831 130 1660 454 2370 925 1306 869 2226 2216 2554 3740 260 1211 136 2482 -352 3612 -74 171 -228 479 -301 605 l-49 82 -366 -367z"
            />
          </g>
        </svg>
      </div>
    </div>
    <!-- <hr /> -->
    <article>
      <div class="container px-4 py-5" id="custom-cards">
        <!-- <div class="container1"> -->
        <h2 id="" class="pb-2 border-bottom fadeIn">Quark</h2>

        <!-- weird white border figure out a fix later-->
        <!-- 
          <img class='pic a' id='pic3'/>
          <img class='pic a' id='pic2'/>
          <img class='pic a' id='pic1'/> -->
        <!-- </div> -->

        <div class="row row-cols-1 row-cols-lg-3 align-items-stretch g-4 py-5">
          <div class="col">
            <div
              class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
              style="
                background-image: url('static/images/2E580798-21FA-4B63-AF7B-41671D6CA294.PNG');
                background-repeat: no-repeat;
                background-position: center;
                background-size: cover;
              "
            >
              <div
                class="d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1"
              >
                <h3 class="pt-5 mt-5 mb-4 display-6 lh-1 fadeIn1">
                  <a class="anchor" href="#lightweight"
                    >Ultra-Lightweight Framework</a
                  >
                </h3>

                <ul class="d-flex list-unstyled mt-auto">
                  <li class="me-auto">
                    <i
                      class="fas fa-leaf"
                      style="height: 32px; width: 32px"
                    ></i>
                  </li>
                  <li class="d-flex align-items-center me-3">
                    <svg class="bi me-2" width="1em" height="1em">
                      <use xlink:href="#geo-fill"></use>
                    </svg>
                    <small>Ease of Use</small>
                    <!-- <?xml version="1.0" standalone="no"?> -->
                    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
                    <svg
                      version="1.0"
                      xmlns="http://www.w3.org/2000/svg"
                      width="30px"
                      height="22px"
                      viewBox="0 0 160.000000 160.000000"
                      preserveAspectRatio="xMidYMid meet"
                    >
                      <g
                        transform="translate(0.000000,160.000000) scale(0.100000,-0.100000)"
                        fill="#00ACD7"
                        stroke="none"
                      >
                        <path
                          d="M987 1496 c-52 -19 -73 -40 -93 -92 -44 -114 13 -226 230 -459 l74
-80 88 93 c126 135 161 180 195 247 40 82 47 148 21 208 -48 108 -169 123
-260 32 l-44 -44 -30 35 c-54 61 -118 82 -181 60z m108 -32 c29 -14 64 -50 88
-90 4 -7 -9 -11 -36 -12 -119 -4 -211 -33 -220 -69 -2 -11 -7 -4 -11 19 -12
55 11 117 53 145 40 27 80 29 126 7z m324 2 c53 -28 84 -112 62 -166 -7 -17
-10 -20 -10 -8 -1 29 -42 47 -136 59 -50 6 -98 12 -107 12 -16 1 -16 3 0 31
41 71 128 104 191 72z"
                        />
                        <path
                          d="M192 1014 c-53 -26 -84 -59 -118 -124 -14 -26 -18 -55 -17 -115 1
-133 51 -240 188 -405 86 -102 305 -332 314 -328 16 8 280 292 337 362 173
217 211 418 102 550 -59 72 -172 104 -259 75 -50 -17 -122 -73 -153 -118 l-28
-40 -32 42 c-91 120 -219 158 -334 101z m214 -49 c41 -24 99 -86 122 -130 9
-18 7 -20 -26 -20 -78 -1 -212 -16 -256 -29 -43 -13 -111 -56 -127 -79 -14
-20 -20 75 -9 129 21 100 112 168 209 158 24 -2 64 -15 87 -29z m479 16 c80
-36 126 -114 124 -211 0 -44 -17 -105 -18 -68 -1 28 -58 66 -113 76 -63 12
-242 35 -280 36 -23 1 -25 3 -15 21 20 39 70 94 107 120 68 47 130 56 195 26z"
                        />
                      </g>
                    </svg>
                  </li>
                </ul>
              </div>
            </div>
          </div>

          <div class="col">
            <div
              class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
              style="
                background-image: url('static/images/4730732D.JPG');
                background-repeat: no-repeat;
                background-position: center;
                background-size: cover;
              "
            >
              <div
                class="d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1"
              >
                <h3 class="pt-5 mt-5 mb-4 display-6 lh-1 fadeIn2">
                  <a class="anchor" href="#performance">Insane Performance</a>
                </h3>
                <ul class="d-flex list-unstyled mt-auto">
                  <li class="me-auto">
                    <!-- <i class="fas fa-microchip"></i> -->
                    <i class="fa fa-rocket"></i>
                  </li>
                  <li
                    class="d-flex align-items-center me-3"
                    style="font-style: italic"
                  >
                    Blazingly Fast
                    <svg
                      version="1.0"
                      xmlns="http://www.w3.org/2000/svg"
                      width="30px"
                      height="22px"
                      viewBox="0 0 160.000000 160.000000"
                      preserveAspectRatio="xMidYMid meet"
                    >
                      <g
                        transform="translate(0.000000,160.000000) scale(0.100000,-0.100000)"
                        fill="#00ACD7"
                        stroke="none"
                      >
                        <path
                          d="M767 1468 c9 -176 -12 -225 -98 -237 -39 -6 -41 -8 -70 -76 -53 -125
                   -70 -186 -79 -287 -7 -83 -12 -104 -31 -124 -61 -65 -149 13 -149 131 0 25 -4
                   45 -9 45 -15 0 -71 -98 -98 -170 -63 -166 -34 -297 99 -458 37 -45 49 -82 28
                   -82 -6 0 -29 9 -51 21 -23 11 -40 16 -38 11 8 -19 120 -109 171 -137 l53 -28
                   -24 26 c-19 21 -24 39 -26 84 -2 44 -10 72 -34 114 -36 64 -71 193 -71 261 0
                   31 -9 63 -26 95 -22 42 -25 56 -19 106 3 32 10 68 14 80 7 17 9 14 14 -19 9
                   -57 45 -105 97 -131 56 -28 73 -28 126 -2 50 24 52 30 59 179 7 130 39 276 65
                   293 13 8 16 15 9 23 -7 9 2 10 35 7 42 -5 46 -4 65 28 12 19 21 40 21 48 0 8
                   9 34 21 57 l20 43 -25 74 c-36 102 -33 124 7 61 17 -29 69 -91 114 -139 46
                   -48 96 -111 112 -139 37 -63 60 -144 45 -154 -6 -4 -13 -15 -17 -24 -4 -12
                   -12 -15 -23 -11 -14 5 -16 3 -11 -11 4 -10 7 -58 7 -107 0 -69 3 -89 14 -89 7
                   0 25 -15 40 -34 22 -30 25 -38 15 -60 -7 -14 -9 -40 -5 -60 6 -29 12 -36 29
                   -36 13 0 32 7 43 15 12 8 24 11 28 8 11 -11 6 -89 -9 -139 -22 -72 -19 -101
                   10 -120 20 -13 28 -14 40 -4 33 27 14 -35 -37 -120 -14 -25 -30 -66 -33 -93
                   -5 -32 -14 -52 -28 -62 -42 -29 0 -14 59 21 72 43 87 56 59 54 -63 -7 -60 5
                   26 104 99 112 123 167 123 276 -1 93 -30 222 -69 299 l-22 44 -12 -46 c-15
                   -63 -62 -86 -107 -53 -17 13 -19 28 -19 173 0 152 -1 160 -27 214 -15 30 -52
                   82 -82 115 -50 55 -228 203 -297 247 l-29 19 7 -124z m564 -655 c-12 -20 -14
                   -14 -5 12 4 9 9 14 11 11 3 -2 0 -13 -6 -23z m-946 -633 c3 -6 -1 -7 -9 -4
                   -18 7 -21 14 -7 14 6 0 13 -4 16 -10z"
                        />
                        <path
                          d="M370 1210 c0 -9 -19 -38 -41 -65 -50 -60 -59 -82 -59 -143 l0 -46 36
                   35 c58 55 99 174 75 216 -8 14 -10 15 -11 3z m-9 -113 c-6 -17 -27 -50 -46
                   -72 l-35 -40 6 40 c8 50 19 72 53 108 30 33 40 18 22 -36z"
                        />
                        <path
                          d="M396 569 c21 -23 63 -27 45 -5 -6 8 -23 16 -37 19 -24 4 -24 3 -8
                   -14z"
                        />
                      </g>
                    </svg>
                  </li>
                </ul>
              </div>
            </div>
          </div>

          <div class="col">
            <div
              class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
              style="
                background-image: url('static/images/IMG_0550.PNG');
                background-repeat: no-repeat;
                background-position: center;
                background-size: cover;
              "
            >
              <div class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1">
                <h3 class="pt-5 mt-5 mb-4 display-6 lh-1 fadeIn3">
                  <a class="anchor" href="#develop"> Build Anything</a>
                </h3>
                <ul class="d-flex list-unstyled mt-auto">
                  <li class="me-auto">
                    <i class="fas fa-cogs"></i>
                  </li>
                  <li class="d-flex align-items-center me-3">
                    <svg class="bi me-2" width="1em" height="1em">
                      <use xlink:href="#geo-fill"></use>
                    </svg>
                    <small>Near-Limitless Potential</small>
                    <!-- <?xml version="1.0" standalone="no"?> -->
                    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
                    <svg
                      version="1.0"
                      xmlns="http://www.w3.org/2000/svg"
                      width="30px"
                      height="22px"
                      viewBox="0 0 160.000000 160.000000"
                      preserveAspectRatio="xMidYMid meet"
                    >
                      <g
                        transform="translate(0.000000,160.000000) scale(0.100000,-0.100000)"
                        fill="#00ACD7"
                        stroke="none"
                      >
                        <path
                          d="M770 1505 c-162 -34 -286  -100 -401 -214 -139 -139 -208 -294 -216
-486 -4 -90 -1 -126 16 -199 56 -236 222 -418 447 -492 75 -24 105 -29 194
-29 187 0 318 51 434 169 118 119 176 261 176 426 0 148 -46 265 -140 360
-161 160 -423 198 -612 87 -143 -84 -229 -268 -206 -439 31 -234 284 -381 495
-288 57 25 127 90 155 145 29 55 35 153 14 209 -19 50 -78 108 -132 131 -48
20 -127 19 -170 -1 -92 -44 -113 -175 -32 -203 39 -14 73 1 93 39 20 38 39 38
77 0 25 -26 29 -36 24 -63 -14 -73 -82 -127 -160 -127 -218 1 -293 271 -120
429 70 64 137 86 236 78 117 -10 220 -71 274 -163 135 -230 -4 -549 -271 -620
-111 -30 -266 -12 -369 44 -76 40 -176 145 -214 224 -33 68 -62 189 -62 256 0
69 29 177 69 257 86 175 265 299 473 329 47 7 88 40 88 72 0 26 -23 62 -47 73
-28 13 -29 13 -113 -4z"
                        />
                      </g>
                    </svg>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center section-one"
      >
        <div class="col-md-5 p-lg-5 mx-auto my-5">
          <h1 id="lightweight" class="display-4 fw-normal">
            Ultra-fast development time
          </h1>

          <h4 class="">Developing applications made easy</h4>
          <p>
            Supports most modern HTML5, CSS, and Go features while still
            remaining light and configurable.
          </p>

          <!-- <a class="btn btn-outline-secondary" href="#">Coming soon</a> -->
        </div>
        <div class="product-device shadow-sm d-none d-md-block"></div>
        <div
          class="product-device product-device-2 shadow-sm d-none d-md-block"
        ></div>
      </div>

      <br />
      <div
        class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center section-two"
      >
        <div class="col-md-5 p-lg-5 mx-auto my-5">
          <h1 id="performance" class="display-4 fw-normal">
            Dual, High-Performance
          </h1>

          <h4 class="">Beyond speed</h4>
          <p>
            Go's lightweight concurrency model and built-in support for web,
            GUI, and networking applications make it a great choice for building
            fast, high performance web and desktop applications. On par with the
            most idiomatic C++ code and making Node.js pale in comparison.
          </p>
          <p>
            <img
              src="static/images/memory-usage-chart-1.png"
              style="
                width: 100%;
                background-repeat: no-repeat;
                background-position: center;
                background-size: cover;
              "
            />
          </p>
          <!-- <a class="btn btn-outline-secondary" href="#">Coming soon</a> -->
        </div>
        <div class="product-device shadow-sm d-none d-md-block"></div>
        <div
          class="product-device product-device-2 shadow-sm d-none d-md-block"
        ></div>
      </div>

      <br />
      <div
        class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center section-three"
      >
        <div class="col-md-5 p-lg-5 mx-auto my-5">
          <h1 id="develop" class="display-4 fw-normal">
            Design, Develop, Deploy
          </h1>

          <h4 class="">Raw Potential</h4>
          <p>
            Get the best of both worlds by building your native Go desktop app's
            front-end with modern HTML/CSS/GO technologies.
          </p>
          <p>
            Currently available for all major platforms Windows, macOS, and
            Linux.
          </p>
          <!-- <a class="btn btn-outline-secondary" href="#">Coming soon</a> -->
        </div>
        <div class="product-device shadow-sm d-none d-md-block"></div>
        <div
          class="product-device product-device-2 shadow-sm d-none d-md-block"
        ></div>
      </div>

      <div class="container px-4 py-5" id="featured-3">
        <h2 class="pb-2 border-bottom">Go Framework w/ Terrain Generation</h2>
        <div class="row g-4 py-5 row-cols-1 row-cols-lg-3">
          <div class="feature col">
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#collection"></use></svg>
          </div> -->
            <h2>Project Info</h2>
            <p>
              Have you ever wanted to develop an application in Google's Go programming language, but needed a little help with 
            the bits and bobs outside the inner workings of the program? 
            </p>
            <p>
            Well, an integrated development environment (IDE) 
            similar to the popular Electron framework is what you you need. This dev environment will organize your project 
            files and provide other helpful functions, external to the program. This is what we aim to provide.    </p>
            </p>

            <!-- <a href="#" class="icon-link">
            Call to action
            <svg class="bi" width="1em" height="1em"><use xlink:href="#chevron-right"></use></svg>
          </a> -->
          </div>
          <div class="feature col">
            <h2>Complex Noise Generation</h2>
            <p>
              In the development of the framework, we also have an example game technology application (project) to develop 
              alongside of the IDE. The game would eventually become a virtual world, so it would naturally begin with some kind 
              of procedural generation of terrain, similar to the classic example in Minecraft. 
              </p>
              <p>
              Can you imagine the joy of turning 
              perlin noise maps into a fantastic world to explore and build in?! How about using a program specifically designed 
              to make that easier on you? Development of this game world program serves as an example of a program made with our 
              IDE in development.
            </p>
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#people-circle"></use></svg>
          </div> -->
          <!-- <div id="" class="">
            <div id="" class="loading spinning">
              <svg
                id=""
                xmlns="http://www.w3.org/2000/svg"
                version="1.0"
                width="90"
                height="83"
                class=""
                viewBox="0 0 1600.000000 1600.000000"
                role="img"
              >
                <title>Quark</title>
      
                <g
                  transform="translate(0.000000,1600.000000) scale(0.100000,-0.100000)"
                  fill="#FFFFFF"
                  stroke="none"
                  stroke-width="1"
                  fill-rule="evenodd"
                >
                  <path
                    id="hg1"
                    class="path"
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M7640 13989 c-1765 -110 -3375 -978 -4440 -2394 -1217 -1619 -1532 -3748 -835 -5655 222 -609 590 -1252 988 -1729 l70 -83 -639 -639 -639 -639 353 -352 352 -353 5502 5503 5503 5502 -353 352 -352 353 -639 -639 -639 -639 -83 70 c-609 509 -1406 922 -2193 1137 -634 174 -1316 245 -1956 205z m675 -999 c1055 -71 2005 -441 2825 -1099 l25 -20 -3515 -3516 c-1933 -1933 -3518 -3514 -3522 -3513 -15 6 -181 227 -273 363 -145 216 -217 340 -340 590 -275 558 -419 1059 -492 1715 -21 194 -24 742 -5 930 110 1069 490 1979 1163 2785 117 139 389 415 533 540 858 743 1883 1160 3021 1228 124 8 443 6 580 -3z"
                  />
                  <path
                    id="hg5"
                    class="path test"
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M12798 10672 l-366 -367 59 -120 c267 -544 426 -1112 491 -1750 19 -192 16 -729 -5 -925 -114 -1036 -488 -1924 -1147 -2720 -133 -161 -459 -487 -620 -620 -796 -659 -1682 -1032 -2720 -1147 -219 -24 -754 -24 -970 0 -632 71 -1127 210 -1676 472 l-152 72 -366 -366 -367 -367 128 -71 c1189 -660 2518 -898 3855 -688 831 130 1660 454 2370 925 1306 869 2226 2216 2554 3740 260 1211 136 2482 -352 3612 -74 171 -228 479 -301 605 l-49 82 -366 -367z"
                  />
                </g>
              </svg>
            </div>
          </div> -->
          </div>

          <div class="feature col">
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#toggles2"></use></svg>
          </div> -->
          </div>
        </div>
 
        <!-- Slideshow tutorial used: https://www.w3schools.com/howto/howto_js_slideshow.asp -->
        <html>
        <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
        * {box-sizing: border-box}
        body {font-family: Verdana, sans-serif; margin:0}
        .mySlides {display: none}
        img {vertical-align: middle;}

        /* Slideshow container */
        .slideshow-container {
          max-width: auto;
          position: relative;
          margin: auto;
        }

        /* Next & previous buttons */
        .prev, .next {
          cursor: pointer;
          position: relative;
          top: 50%;
          width: auto;
          padding: 16px;
          margin-top: -22px;
          color: white;
          font-weight: bold;
          font-size: 18px;
          transition: 0.6s ease;
          border-radius: 0 3px 3px 0;
          user-select: none;
        }

        /* Position the "next button" to the right */
        .next {
          right: 0;
          border-radius: 3px 0 0 3px;
        }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover, .next:hover {
          background-color: rgba(0,0,0,0.8);
        }

        /* Caption text */
        .text {
          color: #f2f2f2;
          background-color: black;
          font-size: 15px;
          padding: 8px 12px;
          position: absolute;
          bottom: 26px;
          width: 100%;
          text-align: center;
        }

        /* Number text (1/3 etc) */
        .numbertext {
          color: #f2f2f2;
          font-size: 12px;
          padding: 8px 12px;
          position: absolute;
          top: 0;
        }

        /* The dots/bullets/indicators */
        .dot {
          cursor: pointer;
          height: 15px;
          width: 15px;
          margin: 0 2px;
          background-color: #bbb;
          border-radius: 50%;
          display: inline-block;
          transition: background-color 0.6s ease;
        }

        .active, .dot:hover {
          background-color: #717171;
        }

        /* Fading animation */
        .fade {
          animation-name: fade;
          animation-duration: 1.5s;
          animation-fill-mode: forwards;
        }

        @keyframes fade {
          from {opacity: .4} 
          to {opacity: 1}
        }

        /* On smaller screens, decrease text size */
        @media only screen and (max-width: 300px) {
          .prev, .next,.text {font-size: 11px}
        }
        </style>
        </head>
        <body>

        <div class="slideshow-container">

        <div class="mySlides fade">
          <div class="numbertext">1 / 3</div>
          <img src="/static/images/perlin noise.png" style="width:100%">
          <div class="text">Perlin noise maps are mathematically, procedurally generated.</div>
        </div>

        <div class="mySlides fade">
          <div class="numbertext">2 / 3</div>
          <img src="/static/images/generic terrain.jpg" style="width:100%">
          <div class="text">By adding layers of other procedures, they are 
            transformed into more colorful terrain with realistic details and features...</div>
        </div>

        <div class="mySlides fade">
          <div class="numbertext">3 / 3</div>
          <img src="/static/images/simJungle.jpg" style="width:100%">
          <div class="text">Eventually natural and man-made objects are added to the base, ground terrain to build up a virtual world that 
            players may want to explore.</div>
        </div>

        <a class="prev" onclick="plusSlides(-1)">❮</a>
        <a class="next" onclick="plusSlides(1)">❯</a>

        </div>
        <br>

        <div style="text-align:center">
          <span class="dot" onclick="currentSlide(1)"></span> 
          <span class="dot" onclick="currentSlide(2)"></span> 
          <span class="dot" onclick="currentSlide(3)"></span> 
        </div>

        <script>
        let slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
          showSlides(slideIndex += n);
        }

        function currentSlide(n) {
          showSlides(slideIndex = n);
        }

        function showSlides(n) {
          let i;
          let slides = document.getElementsByClassName("mySlides");
          let dots = document.getElementsByClassName("dot");
          if (n > slides.length) {slideIndex = 1}    
          if (n < 1) {slideIndex = slides.length}
          for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";  
          }
          for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
          }
          slides[slideIndex-1].style.display = "block";  
          dots[slideIndex-1].className += " active";
        }
        </script>

      </div>
      <div class="container px-4 py-5" id="featured-3">
        <h2 class="pb-2 border-bottom">Further reasoning</h2>
        <div class="row g-4 py-5 row-cols-1 row-cols-lg-3">
          <div class="feature col">
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#collection"></use></svg>
          </div> -->
            <h2>Why?</h2>
            <p>
              To put it bluntly, JavaScript sucks. Use Go. JavaScript suffers
              from many problems that Go simply doesn't. In many ways,
              JavaScript pretends to be something it's not. On top of that, it's
              hilariously slow and full of bloat.
            </p>

           
            <p> This is why Quark is the perfect alternative to frameworks like
              Electron. Quark offers fast performance with even faster development
              time, allowing you to build the application of your dreams as
              quickly as possible.
            </p>
            <!-- <a href="#" class="icon-link">
            Call to action
            <svg class="bi" width="1em" height="1em"><use xlink:href="#chevron-right"></use></svg>
          </a> -->
          </div>
          <div class="feature col">
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#people-circle"></use></svg>
          </div> -->
            <h2>How?</h2>
            <p>
              Quark is built on top of the Go programming language, which is
              designed to be fast, simple, and efficient. Quark is a Go framework
              that allows you to build applications using HTML, CSS, and Go. With little to no dependencies, depending on the use case.
            </p>
            <!-- <a href="#" class="icon-link">
            Call to action
            <svg class="bi" width="1em" height="1em"><use xlink:href="#chevron-right"></use></svg>
          </a> -->
          </div>
          <div class="feature col">
            <!-- <div class="feature-icon bg-primary bg-gradient">
            <svg class="bi" width="1em" height="1em"><use xlink:href="#toggles2"></use></svg>
          </div> -->
            <h2>What?</h2>
            <p>
             Quark allows users to build structured, fluid, and portable applications across all major platforms. 
              It combines 2D graphical user interface technology which offers a mesmerizingly cohesive foundation for application development.
            </p>
            <!-- <a href="#" class="icon-link">
            Call to action
            <svg class="bi" width="1em" height="1em"><use xlink:href="#chevron-right"></use></svg>
          </a> -->
          </div>
        </div>
      </div>
      <!-- <p>This came form the template: {{ index .StringMap "test" }}</p>

      <p>
        {{ if ne (index .StringMap "remote_ip") "" }}
        <br />
        <br />
      </p>

      <p>Remote IP: {{ index .StringMap "remote_ip" }}</p>

      {{ else }}
      Please visit the <a href="/">home page</a> to see the remote IP.
      {{ end }}
      <p></p> -->
    </article>
  </section>
</main>

{{ end }}
